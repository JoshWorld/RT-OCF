/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSELECT_H
#define _MOCKSELECT_H

#include "sys/select.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockselect_Init(void);
void Mockselect_Destroy(void);
void Mockselect_Verify(void);




#define select_IgnoreAndReturn(cmock_retval) select_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void select_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, __BEGIN_DECLS int cmock_to_return);
#define select_ExpectAnyArgsAndReturn(cmock_retval) select_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void select_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, __BEGIN_DECLS int cmock_to_return);
#define select_ExpectAndReturn(__nfds, __readfds, __writefds, __exceptfds, __timeout, cmock_retval) select_CMockExpectAndReturn(__LINE__, __nfds, __readfds, __writefds, __exceptfds, __timeout, cmock_retval)
void select_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int __nfds, fd_set* __restrict __readfds, fd_set* __restrict __writefds, fd_set* __restrict __exceptfds, struct timeval* __restrict __timeout, __BEGIN_DECLS int cmock_to_return);
typedef __BEGIN_DECLS int (* CMOCK_select_CALLBACK)(int __nfds, fd_set* __restrict __readfds, fd_set* __restrict __writefds, fd_set* __restrict __exceptfds, struct timeval* __restrict __timeout, int cmock_num_calls);
void select_StubWithCallback(CMOCK_select_CALLBACK Callback);
#define select_IgnoreArg___nfds() select_CMockIgnoreArg___nfds(__LINE__)
void select_CMockIgnoreArg___nfds(UNITY_LINE_TYPE cmock_line);
#define select_IgnoreArg___readfds() select_CMockIgnoreArg___readfds(__LINE__)
void select_CMockIgnoreArg___readfds(UNITY_LINE_TYPE cmock_line);
#define select_IgnoreArg___writefds() select_CMockIgnoreArg___writefds(__LINE__)
void select_CMockIgnoreArg___writefds(UNITY_LINE_TYPE cmock_line);
#define select_IgnoreArg___exceptfds() select_CMockIgnoreArg___exceptfds(__LINE__)
void select_CMockIgnoreArg___exceptfds(UNITY_LINE_TYPE cmock_line);
#define select_IgnoreArg___timeout() select_CMockIgnoreArg___timeout(__LINE__)
void select_CMockIgnoreArg___timeout(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreAndReturn(cmock_retval) pselect_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pselect_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define pselect_ExpectAnyArgsAndReturn(cmock_retval) pselect_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pselect_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define pselect_ExpectAndReturn(__nfds, __readfds, __writefds, __exceptfds, __timeout, __sigmask, cmock_retval) pselect_CMockExpectAndReturn(__LINE__, __nfds, __readfds, __writefds, __exceptfds, __timeout, __sigmask, cmock_retval)
void pselect_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int __nfds, fd_set* __restrict __readfds, fd_set* __restrict __writefds, fd_set* __restrict __exceptfds, const struct timespec* __restrict __timeout, const __sigset_t* __restrict __sigmask, int cmock_to_return);
typedef int (* CMOCK_pselect_CALLBACK)(int __nfds, fd_set* __restrict __readfds, fd_set* __restrict __writefds, fd_set* __restrict __exceptfds, const struct timespec* __restrict __timeout, const __sigset_t* __restrict __sigmask, int cmock_num_calls);
void pselect_StubWithCallback(CMOCK_pselect_CALLBACK Callback);
#define pselect_IgnoreArg___nfds() pselect_CMockIgnoreArg___nfds(__LINE__)
void pselect_CMockIgnoreArg___nfds(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreArg___readfds() pselect_CMockIgnoreArg___readfds(__LINE__)
void pselect_CMockIgnoreArg___readfds(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreArg___writefds() pselect_CMockIgnoreArg___writefds(__LINE__)
void pselect_CMockIgnoreArg___writefds(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreArg___exceptfds() pselect_CMockIgnoreArg___exceptfds(__LINE__)
void pselect_CMockIgnoreArg___exceptfds(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreArg___timeout() pselect_CMockIgnoreArg___timeout(__LINE__)
void pselect_CMockIgnoreArg___timeout(UNITY_LINE_TYPE cmock_line);
#define pselect_IgnoreArg___sigmask() pselect_CMockIgnoreArg___sigmask(__LINE__)
void pselect_CMockIgnoreArg___sigmask(UNITY_LINE_TYPE cmock_line);

#endif
